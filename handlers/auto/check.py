from aiogram import types
import base64
from bot import dp, bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import requests
import json
from aiogram.dispatcher.filters import Filter
import re
import datetime
from datetime import date
from handlers.account import sendError
from .get_full_info import main_mini
from aiogram.types.web_app_info import WebAppInfo
from ..db import DataBase
from ..common import check_rights, getConfig

main_conf = getConfig('auto')
price_otchet = main_conf['price_otchet']
price_phone = main_conf['price_phone']
price_city = main_conf['price_city']
price_area = main_conf['price_area']


class IsNumber(Filter):
    async def check(self, message: types.Message):
        gos_number = [
            r"^(?i)[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]\d{3}[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]{2}\d{2,3}",
            r"^(?i)[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]{2}\d{3}\d{2,3}",
            r"^(?i)[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]{2}\d{4}\d{2,3}",
            r"^(?i)\d{4}[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]{2}\d{2,3}",
            r"^(?i)[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]{2}\d{3}[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]\d{2,3}",
            r"^(?i)–¢[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]{2}\d{3}\d{2,3}",
            r"^(?i)[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]\d{5,6}",
            r"^(?i)[A-HJ-NPR-Za-hj-npr-z\d]{8}[\dX][A-HJ-NPR-Za-hj-npr-z\d]{2}\d{6}$",
            r"^(?i)[A-HJ-NPR-Z0-9]{17}",
        ]
        regexps_compiled = [re.compile(r) for r in gos_number]
        for regex in regexps_compiled:
            if re.findall(regex, message.text):
                return True
        return False


def years(n):
    days = ["–≥–æ–¥", "–≥–æ–¥–∞", "–ª–µ—Ç"]

    if n % 10 == 1 and n % 100 != 11:
        p = 0
    elif 2 <= n % 10 <= 4 and (n % 100 < 10 or n % 100 >= 20):
        p = 1
    else:
        p = 2
    return str(n) + " " + days[p]


async def yes_osago(all_info, subscribe, number, user_id):
    result = all_info['result']['content']['content']
    osago = result['insurance']['osago']
    orgosago = osago['items'][0]['insurer']['name']
    area_reg = '–Ω–∞–π–¥–µ–Ω–æ' if 'region' in result['additional_info']['vehicle']['owner']['geo'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
    area_reg_db = result['additional_info']['vehicle']['owner']['geo'][
        'region'] if 'region' in result['additional_info']['vehicle']['owner']['geo'] else ''

    city_reg = '–Ω–∞–π–¥–µ–Ω–æ' if 'city' in result['additional_info']['vehicle']['owner']['geo'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
    city_reg_db = result['additional_info']['vehicle']['owner']['geo'][
        'city'] if 'city' in result['additional_info']['vehicle']['owner']['geo'] else ''

    phone = [
        r"^((\+7|7|8)+([0-9]){10})$",
        r"^(\+)?((\d{2,3}) ?\d|\d)(([ -]?\d)|( ?(\d{2,3}) ?)){5,12}\d$",
    ]

    regexps_compiled = [re.compile(r) for r in phone]

    if 'phone_number' in result['additional_info']['vehicle']['owner']:
        for regex in regexps_compiled:
            if re.findall(regex, result['additional_info']['vehicle']['owner']['phone_number']):
                owner_phone = '–Ω–∞–π–¥–µ–Ω–æ'
                owner_phone_db = result['additional_info']['vehicle']['owner']['phone_number']

    elif int(result['registration_actions']['count']) > 0:
        phone_array = []
        owner_phone = '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        for item in result['registration_actions']['items']:
            __phone = item['owner']['phone_number'] if 'phone_number' in item['owner'] else None
            if __phone != None:
                for regex in regexps_compiled:
                    if re.findall(regex, __phone):
                        if __phone not in phone_array:
                            phone_array.append(__phone)
                        owner_phone = '–Ω–∞–π–¥–µ–Ω–æ'
            owner_phone_db = ''
        owner_phone_db = ', '.join(phone_array)
    else:
        owner_phone = '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        owner_phone_db = ''

    info_owner = {
        'area_reg': area_reg_db,
        'city_reg': city_reg_db,
        'owner_phone': owner_phone_db
    }

    if subscribe:
        vin = result['identifiers']['vehicle']['vin'] if 'vin' in result['identifiers']['vehicle'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        reg = result['identifiers']['vehicle']['reg_num'] if 'reg_num' in result['identifiers']['vehicle'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        marka = osago['items'][0]['vehicle']['model']['name'] if 'name' in osago['items'][0]['vehicle']['model'] else result[
            'tech_data']['brand']['name']['original'] if 'original' in result['tech_data']['brand']['name'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        owner = osago['items'][0]['owner']['name'] if 'name' in osago['items'][0]['owner'] else osago[
            'items'][0]['insurant']['name'] if 'name' in osago['items'][0]['insurant'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        burthday_old = osago['items'][0]['owner']['dob'] if 'dob' in osago['items'][0]['owner'] else osago[
            'items'][0]['insurant']['dob'] if 'dob' in osago['items'][0]['insurant'] else ''
        try:
            burthday = datetime.datetime.strptime(burthday_old, "%Y-%m-%d")
            birthday_str = ""
            if burthday_old:
                birthday_str = burthday_old.split(
                    '-')[2]+'.'+burthday_old.split('-')[1]+'.'+burthday_old.split('-')[0]
                birthday_str = f"‚îú <b>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> <code>{birthday_str}</code>\n"
            today = date.today()
            age = (
                today.year
                - burthday.year
                - ((today.month, today.day) < (burthday.month, burthday.day))
            )
            age = str(years(age))
            age = f"‚îú <b>–í–æ–∑—Ä–∞—Å—Ç:</b> <code>{age}</code>\n"
        except:
            birthday_str = ""
            age = ""
        kbm = osago['items'][0]['contract']['kbm'] if 'kbm' in osago['items'][0]['contract'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        strahsum = osago['items'][0]['contract']['amount']['value'] if 'value' in osago['items'][0]['contract']['amount'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        status = osago['items'][0]['policy']['status'] if 'status' in osago['items'][0]['policy'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        power = osago['items'][0]['vehicle']['engine']['power']['hp'] if 'hp' in osago['items'][0]['vehicle']['engine'][
            'power'] else result['tech_data']['engine']['power']['hp'] if 'hp' in result['tech_data']['engine']['power'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        nomer = osago['items'][0]['number'] if 'number' in osago['items'][0] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'

        owner_count = result['ownership']['history']['count'] if 'count' in result['ownership']['history'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        dtp_count = result['accidents']['history']['count'] if 'count' in result['accidents']['history'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        mileages_count = result['mileages']['count'] if 'count' in result['mileages'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'

    else:
        vin = '–Ω–∞–π–¥–µ–Ω–æ' if 'vin' in result['identifiers']['vehicle'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        reg = '–Ω–∞–π–¥–µ–Ω–æ' if 'reg_num' in result['identifiers']['vehicle'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        marka = '–Ω–∞–π–¥–µ–Ω–æ' if 'name' in osago['items'][0]['vehicle']['model'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        owner = '–Ω–∞–π–¥–µ–Ω–æ' if 'name' in osago['items'][0]['owner'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        birthday_str = ''
        age = ''
        kbm = '–Ω–∞–π–¥–µ–Ω–æ' if 'kbm' in osago['items'][0]['contract'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        strahsum = '–Ω–∞–π–¥–µ–Ω–æ' if 'value' in osago['items'][0]['contract']['amount'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        status = '–Ω–∞–π–¥–µ–Ω–æ' if 'status' in osago['items'][0]['policy'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        power = '–Ω–∞–π–¥–µ–Ω–æ' if 'hp' in osago['items'][0]['vehicle']['engine']['power'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        nomer = '–Ω–∞–π–¥–µ–Ω–æ' if 'number' in osago['items'][0] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'

        owner_count = '–Ω–∞–π–¥–µ–Ω–æ' if 'count' in result['ownership']['history'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        dtp_count = '–Ω–∞–π–¥–µ–Ω–æ' if 'count' in result['accidents']['history'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        mileages_count = '–Ω–∞–π–¥–µ–Ω–æ' if 'count' in result['mileages'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'

    type_check = all_info['result']['content']['query']['type']
    msg = "#Ô∏è‚É£\n"
    if type_check == "VIN":
        msg += f"‚îî <b>VIN:</b> <code>{number}</code>\n\n"
    else:
        msg += f"‚îî <b>–ù–æ–º–µ—Ä:</b> <code>{number}</code>\n\n"

    msg += f"üìã <b>{orgosago}</b>\n"
    msg += f"‚îú <b>VIN:</b> <code>{vin}</code>\n"
    msg += f"‚îú <b>–ì/–Ω:</b> <code>{reg}</code>\n"
    msg += f"‚îú <b>–ú–æ–¥–µ–ª—å:</b> <code>{marka}</code>\n"
    msg += f"‚îú <b>–í–ª–∞–¥–µ–ª–µ—Ü:</b> <code>{owner}</code>\n"
    msg += birthday_str
    msg += age
    msg += f"‚îú <b>–ö–ë–ú:</b> <code>{kbm}</code>\n"
    msg += f"‚îú <b>–°—Ç—Ä–∞—Ö–æ–≤–∞—è –ø—Ä–µ–º–∏—è:</b> <code>{strahsum}</code>\n"
    msg += f"‚îú <b>–°—Ç–∞—Ç—É—Å:</b> <code>{status}</code>\n"
    msg += f"‚îú <b>–ú–æ—â–Ω–æ—Å—Ç—å:</b> <code>{power}</code>\n"
    msg += f"‚îî <b>–ü–æ–ª–∏—Å:</b> <code>{nomer}</code>\n\n"

    msg += f"üìÉ <b>–í–ª–∞–¥–µ–ª—å—Ü—ã</b>\n"
    if subscribe:
        msg += f"‚îî <b>–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ:</b> <code>{owner_count}</code>\n\n"
    else:
        msg += f"‚îî <b>–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ:</b> <code>–ó–∞–∫—Ä—ã—Ç–æ</code>\n\n"

    msg += f"üöî <b>–î–¢–ü</b>\n"
    if subscribe:
        msg += f"‚îî <b>–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ:</b> <code>{dtp_count}</code>\n\n"
    else:
        msg += f"‚îî <b>–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ:</b> <code>–ó–∞–∫—Ä—ã—Ç–æ</code>\n\n"

    msg += f"üó∫ <b>–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–±–µ–≥–∞</b>\n"
    if subscribe:
        msg += f"‚îî <b>–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ:</b> <code>{mileages_count}</code>\n\n"
    else:
        msg += f"‚îî <b>–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ:</b> <code>–ó–∞–∫—Ä—ã—Ç–æ</code>\n\n"

    user_rights_bool = await check_rights(user_id)
    if user_rights_bool == 1 or user_rights_bool == 2 or user_rights_bool == 0:
        if info_owner['area_reg'] != '' or info_owner['city_reg'] != '' or info_owner['owner_phone'] != '':
            msg += f"üë®‚Äçü¶∞ <b>–î–∞–Ω–Ω—ã–µ –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ</b>\n"
            if info_owner['area_reg'] != '':
                msg += f"‚îú <b>–†–∞–π–æ–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> <code>{area_reg}</code>\n"
            if info_owner['city_reg'] != '':
                msg += f"‚îú <b>–ì–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> <code>{city_reg}</code>\n"
            if info_owner['owner_phone'] != '':
                msg += f"‚îî <b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> <code>{owner_phone}</code> (50/50)\n\n"

    if not subscribe:
        msg += "‚ùì–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ–¥ —Å—Ç–∞—Ç—É—Å–æ–º <code>–ó–∞–∫—Ä—ã—Ç–æ</code> –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ <b>–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É</b> –∏–ª–∏ –∫—É–ø–∏—Ç—å <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç</b>"

    photo = []
    if subscribe:
        if int(result["images"]['photos']['count']) > 0:
            count = 0
            for item in result["images"]['photos']['items']:
                if count == 5:
                    break
                photo.append(item["uri"])
                count += 1

    response = {"msg": msg, "photo": photo, "subscribe": subscribe,
                'uuid': all_info['result']['uuid'], 'info_owner': info_owner}
    return response


async def no_osago(all_info, subscribe, number, user_id):
    result = all_info['result']['content']['content']
    area_reg = '–Ω–∞–π–¥–µ–Ω–æ' if 'region' in result['additional_info']['vehicle']['owner']['geo'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
    area_reg_db = result['additional_info']['vehicle']['owner']['geo'][
        'region'] if 'region' in result['additional_info']['vehicle']['owner']['geo'] else ''

    city_reg = '–Ω–∞–π–¥–µ–Ω–æ' if 'city' in result['additional_info']['vehicle']['owner']['geo'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
    city_reg_db = result['additional_info']['vehicle']['owner']['geo'][
        'city'] if 'city' in result['additional_info']['vehicle']['owner']['geo'] else ''

    if 'phone_number' in result['additional_info']['vehicle']['owner']:
        owner_phone = '–Ω–∞–π–¥–µ–Ω–æ'
        owner_phone_db = result['additional_info']['vehicle']['owner']['phone_number']

    elif int(result['registration_actions']['count']) > 0:
        for item in result['registration_actions']['items']:
            __phone = item['owner']['phone_number'] if 'phone_number' in item['owner'] else None
            if __phone != None:
                owner_phone = '–Ω–∞–π–¥–µ–Ω–æ'
                owner_phone_db = __phone
                break
            owner_phone = '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
            owner_phone_db = ''
    else:
        owner_phone = '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        owner_phone_db = ''

    info_owner = {
        'area_reg': area_reg_db,
        'city_reg': city_reg_db,
        'owner_phone': owner_phone_db
    }

    if subscribe:
        vin = result['identifiers']['vehicle']['vin'] if 'vin' in result['identifiers']['vehicle'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        reg = result['identifiers']['vehicle']['reg_num'] if 'reg_num' in result['identifiers']['vehicle'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        owner_count = result['ownership']['history']['count'] if 'count' in result['ownership']['history'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        dtp_count = result['accidents']['history']['count'] if 'count' in result['accidents']['history'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        mileages_count = result['mileages']['count'] if 'count' in result['mileages'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'

    else:
        vin = '–Ω–∞–π–¥–µ–Ω–æ' if 'vin' in result['identifiers']['vehicle'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        reg = '–Ω–∞–π–¥–µ–Ω–æ' if 'reg_num' in result['identifiers']['vehicle'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        owner_count = '–Ω–∞–π–¥–µ–Ω–æ' if 'count' in result['ownership']['history'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        dtp_count = '–Ω–∞–π–¥–µ–Ω–æ' if 'count' in result['accidents']['history'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        mileages_count = '–Ω–∞–π–¥–µ–Ω–æ' if 'count' in result['mileages'] else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'

    type_check = all_info['result']['content']['query']['type']
    msg = "#Ô∏è‚É£\n"
    if type_check == "VIN":
        msg += f"‚îî <b>VIN:</b> <code>{number}</code>\n\n"
    else:
        msg += f"‚îî <b>–ù–æ–º–µ—Ä:</b> <code>{number}</code>\n\n"

    msg += f"<b>–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–µ—Ä–≤–∏—Å –û–°–ê–ì–û –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</b>\n"
    msg += f"<b>–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º –æ—Ç—á–µ—Ç–µ</b>\n"
    msg += f"<i>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ –Ω–µ—Ç</i>\n"
    msg += f"‚îú <b>VIN:</b> <code>{vin}</code>\n"
    msg += f"‚îî <b>–ì/–Ω:</b> <code>{reg}</code>\n\n"

    msg += f"üìÉ <b>–í–ª–∞–¥–µ–ª—å—Ü—ã</b>\n"
    msg += f"‚îî <b>–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ:</b> <code>{owner_count}</code>\n\n"

    msg += f"üöî <b>–î–¢–ü</b>\n"
    msg += f"‚îî <b>–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ:</b> <code>{dtp_count}</code>\n\n"

    msg += f"üó∫ <b>–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–±–µ–≥–∞</b>\n"
    msg += f"‚îî <b>–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ:</b> <code>{mileages_count}</code>\n\n"

    user_rights_bool = await check_rights(user_id)
    if user_rights_bool == 1 or user_rights_bool == 2 or user_rights_bool == 0:
        if info_owner['area_reg'] != '' or info_owner['city_reg'] != '' or info_owner['owner_phone'] != '':
            msg += f"üë®‚Äçü¶∞ <b>–î–∞–Ω–Ω—ã–µ –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ</b>\n"
            if info_owner['area_reg'] != '':
                msg += f"‚îú <b>–†–∞–π–æ–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> <code>{area_reg}</code>\n"
            if info_owner['city_reg'] != '':
                msg += f"‚îú <b>–ì–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> <code>{city_reg}</code>\n"
            if info_owner['owner_phone'] != '':
                msg += f"‚îî <b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> <code>{owner_phone}</code> (50/50)\n\n"

    photo = []
    if subscribe:
        if int(result["images"]['photos']['count']) > 0:
            count = 0
            for item in result["images"]['photos']['items']:
                if count == 5:
                    break
                photo.append(item["uri"])
                count += 1

    response = {"msg": msg, "photo": photo, "subscribe": subscribe,
                'uuid': all_info['result']['uuid'], 'info_owner': info_owner}
    return response


async def check_auto(number, user_id):
    all_info = await main_mini(number)
    if 'error' in all_info:
        return all_info
    if not 'osago' in all_info['result']['content']['content']['insurance']:
        error = {
            'error': '<b>–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑</b>'
        }
        return error
    async with DataBase() as db:
        subscribe = await db.read('subscribe', where="user_id={} AND status=true ORDER BY id DESC".format(user_id))
    with open('result.json', 'w', encoding='utf8') as file:
        json.dump(all_info, file, indent=4, ensure_ascii=False)

    result = all_info['result']['content']['content']
    number = number.upper()
    if int(result['insurance']['osago']['count']) > 0:
        return await yes_osago(all_info, subscribe, number, user_id)
    else:
        return await no_osago(all_info, subscribe, number, user_id)


@dp.message_handler(IsNumber())
async def get_number(message: types.Message):
    chat_id = message.chat.id
    async with DataBase() as db:
        try:
            auth = await db.read('users', where="user_id={}".format(chat_id))
            if auth:
                user_rights_bool = await check_rights(chat_id)
                await message.answer(f"‚è≥ <b>–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...</b>", parse_mode=types.ParseMode.HTML)
                result = await check_auto(message.text, chat_id)
                try:
                    await bot.delete_message(chat_id, message.message_id+1)
                    await bot.delete_message(chat_id, message.message_id+2)
                except:
                    pass
                if 'error' in result:
                    msg = '‚ùå '+result['error']
                    await message.answer(msg, parse_mode=types.ParseMode.HTML)
                    return
                await db.increment("users", "checked_auto", 1, where=f"user_id={chat_id}")
                info_owner = result['info_owner']
                id_avtocod = result['uuid']
                await db.insert('history', ["user_id", "request_type", "request", "id_avtocod", "info_owner"], [chat_id, "check_auto", message.text, id_avtocod, str(info_owner)])
                inline_btn_1 = InlineKeyboardButton(
                    "üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="pay_subcribe")
                query = await db.read('users', where="user_id={}".format(chat_id))
                free_otchet = query[0]['free_otchet']
                inline_btn_2 = InlineKeyboardButton(
                    f"üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç - {price_otchet}‚ÇΩ", callback_data="otchet_"+result['uuid']+'_'+message.text)

                if free_otchet != 0:
                    inline_btn_2 = InlineKeyboardButton(
                        f"üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç - 0‚ÇΩ", callback_data="otchet_"+result['uuid']+'_'+message.text)

                inline_kb1 = InlineKeyboardMarkup()
                if result["subscribe"]:
                    inline_kb1.row(inline_btn_2)
                else:
                    inline_kb1.row(inline_btn_1).row(inline_btn_2)
                if user_rights_bool == 1 or user_rights_bool == 2 or user_rights_bool == 0:
                    if info_owner['area_reg'] != '':
                        area = InlineKeyboardButton(
                            f"üì° –£–∑–Ω–∞—Ç—å –æ–±–ª–∞—Å—Ç—å - {str(price_area)}‚ÇΩ", callback_data="get_area_"+id_avtocod)
                        inline_kb1.row(area)
                    if info_owner['city_reg'] != '':
                        city = InlineKeyboardButton(
                            f"üåá –£–∑–Ω–∞—Ç—å –≥–æ—Ä–æ–¥ - {str(price_city)}‚ÇΩ", callback_data="get_city_"+id_avtocod)
                        inline_kb1.row(city)
                    if info_owner['owner_phone'] != '':
                        phone = InlineKeyboardButton(
                            f"üì± –£–∑–Ω–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω - {str(price_phone)}‚ÇΩ", callback_data="get_phone_"+id_avtocod)
                        inline_kb1.row(phone)
                await message.answer(result["msg"], reply_markup=inline_kb1, parse_mode=types.ParseMode.HTML)
                media = []
                for item in result["photo"]:
                    media.append(types.InputMediaPhoto(item, message.text))
                if len(media) > 0:
                    await types.ChatActions.upload_photo()
                    await bot.send_media_group(message.chat.id, media=media)
            else:
                await message.answer("ü§î <b>–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é</b>", parse_mode=types.ParseMode.HTML, )
        except Exception as exc:
            await sendError(message)


@dp.callback_query_handler(lambda c: c.data.split('_')[0] == 'otchet')
async def otchet(call: types.CallbackQuery):
    try:
        async with DataBase() as db:
            user_id = call.message.chat.id
            number_str = call.data.split('_')[1]
            number_str_text = call.data.split('_')[2]
            query = await db.read('users', where="user_id={}".format(user_id))
            balance = int(query[0]["balance"])
            free_otchet = query[0]['free_otchet']
            link = 'https://profi.avtocod.ru/report/guest/'+number_str
            msg = f'üìù –û—Ç—á–µ—Ç –ê–≤—Ç–æ–ö–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É <code>{number_str_text.upper()}</code> –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω.\n\n'
            msg += f'–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –æ—Ç—á–µ—Ç–æ–º –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:\n\n'
            msg += link
            favorite = InlineKeyboardButton(
                "‚≠êÔ∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data="add_fav|"+number_str+"|"+number_str_text.upper())
            inline_kb1 = InlineKeyboardMarkup().row(favorite)
            if free_otchet == 0:
                if balance >= price_otchet:
                    await db.decrement("users", "balance", price_otchet, where=f"user_id={user_id}")
                    await db.insert('operations', ['user_id', 'transaction_type', 'transaction'], [user_id, 'writedowns', f'{price_otchet}‚ÇΩ - –ü–æ–∫—É–ø–∫–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—é {number_str_text.upper()}'])
                else:
                    msg = "‚ùå –ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\n"
                    msg += "- - - - - - - - - - - - - -\n"
                    msg += f"<b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> <code>{balance}‚ÇΩ</code>"
                    inline_btn_1 = InlineKeyboardButton(
                        f"üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É {price_otchet-balance} ‚ÇΩ", callback_data="payment_" + str(price_otchet - balance))
                    cancel = InlineKeyboardButton(
                        "‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="cancel")
                    inline_kb1 = InlineKeyboardMarkup().add(inline_btn_1).add(cancel)
            else:
                await db.decrement("users", "free_otchet", 1, where=f"user_id={user_id}")
            await call.message.answer(msg, reply_markup=inline_kb1, parse_mode=types.ParseMode.HTML)
    except Exception as exc:
        await sendError(call.message)


@dp.message_handler(content_types=["photo"])
async def handle_docs_photo(message: types.Message):
    chat_id = message.chat.id
    async with DataBase() as db:
        try:
            auth = await db.read('users', where="user_id={}".format(chat_id))
            if auth:
                await message.photo[-1].download("auto.jpg")
                image = open("auto.jpg", "rb")
                image_read = image.read()
                image_64_encode = base64.encodebytes(image_read)
                result = json.loads(
                    requests.post(
                        "https://data.av100.ru/numberrecognize.ashx?key=",
                        data={"img": image_64_encode},
                    ).text
                )
                if result["result"]:
                    message.text = result["result"][0]
                    await get_number(message)
                else:
                    msg = "‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–æ–º–µ—Ä!</b>\n\n"
                    msg += "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –∞–≤—Ç–æ."
                    await message.reply(msg, parse_mode=types.ParseMode.HTML)
            else:
                await message.answer(
                    "ü§î <b>–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é</b>",
                    parse_mode=types.ParseMode.HTML,
                )
        except Exception as exc:
            await sendError(message)


@dp.callback_query_handler(lambda c: c.data.split('|')[0] == 'add_fav')
async def _add_favorite(call: types.CallbackQuery):
    chat_id = call.message.chat.id
    message_id = call.message.message_id
    try:
        async with DataBase() as db:
            fav_id = call.data.split('|')[1]
            number = call.data.split('|')[2]
            await db.insert('favorites', ['user_id', 'number', 'favorite_id'], [chat_id, number, fav_id])
            await call.answer('–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', show_alert=False)
            await bot.edit_message_text(call.message.text, chat_id, message_id)
    except Exception as exc:
        await sendError(call.message)
