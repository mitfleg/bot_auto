from aiogram import types
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton
from bot import dp, bot
from aiogram.dispatcher.filters.builtin import CommandStart
from handlers.db import DataBase
from .common import main_menu_all, ADMIN_ID


@dp.message_handler(CommandStart())
async def bot_start(message: types.Message):
    msg = '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–æ–∏—Å–∫–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É!</b>\n\n'
    msg += '–°–µ—Ä–≤–∏—Å —è–≤–ª—è–µ—Ç—Å—è <b>–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º</b> –ø–æ –ø–æ–∏—Å–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ç–∫—Ä—ã—Ç—ã–µ –∏ –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–∞–Ω–∫–∏ –¥–∞–Ω–Ω—ã—Ö. '
    msg += '–°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç—á—ë—Ç <b>¬´–Ω–∞ —Ö–æ–¥—É¬ª</b>, —Ç–æ –µ—Å—Ç—å <b>–±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è</b> –≤—Å–µ–π –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.'
    await message.answer(msg, parse_mode=types.ParseMode.HTML)
    phone = KeyboardButton(
        text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚úÖ', request_contact=True)
    greet_kb = ReplyKeyboardMarkup(
        resize_keyboard=True, one_time_keyboard=True)
    greet_kb.add(phone)
    await message.answer('–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ <b>–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b> –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å <b>–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é.</b>\n\n<b>–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.</b>', reply_markup=greet_kb, parse_mode=types.ParseMode.HTML)


@dp.message_handler(content_types=['contact'])
async def read_contact_phone(message: types.Message):
    message_id = message.message_id
    phone_usm = message.contact.phone_number
    if message.chat.username == None:
        msg = 'ü§î <b>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.</b>\n\n '
        msg += '–°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ, —Å–ª–µ–¥—É—è –ø–æ –ø—É—Ç–∏ \n '
        msg += '<code>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</code>><code>–ò–∑–º–µ–Ω–∏—Ç—å</code>><code>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</code>><code>"–í–≤–µ–¥–∏—Ç–µ –∏–º—è"</code>><code>–ì–æ—Ç–æ–≤–æ</code>\n '
        msg += '–ü–æ—Å–ª–µ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start\n '
        await message.answer(msg, parse_mode=types.ParseMode.HTML)
        return
    async with DataBase() as db:
        await db.create('users', ['user_name', 'user_id', 'user_phone'], [message.chat.username, message.chat.id, phone_usm])
    await message.delete()
    try:
        await bot.delete_message(message.chat.id, message_id-1)
        await bot.delete_message(message.chat.id, message_id-2)
    except:
        pass
    greet_kb = ReplyKeyboardRemove()
    await message.answer('‚úÖ <b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!</b>', reply_markup=greet_kb, parse_mode=types.ParseMode.HTML)
    await message.answer('üëã <b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!</b>', parse_mode=types.ParseMode.HTML)
    try:
        await bot.send_message(ADMIN_ID, f'–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>{message.chat.username}</code>\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: <code>{phone_usm}</code>', parse_mode=types.ParseMode.HTML)
    except:
        pass

    result = await main_menu_all(message)
    try:
        await bot.edit_message_text(result['msg'], message.chat.id, message_id, reply_markup=result['btns'], parse_mode=types.ParseMode.HTML)
    except:
        await message.answer(result['msg'], reply_markup=result['btns'], parse_mode=types.ParseMode.HTML)
